s.subscriptions.push(i.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration("debug.javascript.codelens.npmScripts")&&(this.lensLocation=l(),this.changeEmitter.fire())}))}provideCodeLenses(e){if("never"===this.lensLocation)return[];const t=this.tokenizeScripts(e);if(!t)return[];const r=u(0,null,"$(debug-start)"),n=a.dirname(e.uri.fsPath);if("top"===this.lensLocation)return[new i.CodeLens(new i.Range(t.scriptStart,t.scriptStart),o.asCommand({title:r,command:"extension.pwa-node-debug.npmScript",arguments:[n]}))];if("all"===this.lensLocation){const a=i.workspace.getWorkspaceFolder(e.uri);return t.scripts.map(({name:e,position:t})=>new i.CodeLens(new i.Range(t,t),o.asCommand({title:r,command:"extension.pwa-node-debug.createDebuggerTerminal",arguments:[c.getRunScriptCommand(e,a