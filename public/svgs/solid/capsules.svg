{value:!0});const n=r(145);t.ConsoleLogSink=class{constructor(e){this.dap=e}async setup(){}dispose(){}write(e){const t=e.level>3?"stderr":2===e.level?"console":"stdout";let r=`[${function(e){switch(e){case 4:return"FATAL";case 3:return"ERROR";case 2:return"WARN";case 1:return"INFO";case 0:return"VERB";default:return"UNKNOWN"}}(e.level)}@${function(){const e=new Date,t=String(e.getUTCHours()).padStart(2,"0"),r=String(e.getUTCMinutes()).padStart(2,"0"),n=String(e.getUTCSeconds()).padStart(2,"0"),i=String(e.getUTCMilliseconds()).padStart(3,"0");return`${t}:${r}:${n}.${i}`}()}] [${e.tag}]`;e.message&&(r+=` ${e.message}`),e.metadata&&(r+=`: ${JSON.stringify(e.metadata)}`),r+="\n",this.dap.output(n.omitLoggingFor({category:t,output:r}))}}},function(e,t,r){"use strict";Object.definePr