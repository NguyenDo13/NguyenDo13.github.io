ne-1,n=r.generatedOffset.generatedColumn-1;return 1===e.line&&(e.column+=n,"number"==typeof e.lastColumn&&(e.lastColumn+=n)),e.lastColumn===1/0&&i&&e.line===i.generatedOffset.generatedLine&&(e.lastColumn=i.generatedOffset.generatedColumn-2),e.line+=t,e}):[]}eachMapping(e,t,r){this._sections.forEach((n,i)=>{const a=i+1<this._sections.length?this._sections[i+1]:null,{generatedOffset:o}=n,s=o.generatedLine-1,c=o.generatedColumn-1;n.consumer.eachMapping((function(t){1===t.generatedLine&&(t.generatedColumn+=c,"number"==typeof t.lastGeneratedColumn&&(t.lastGeneratedColumn+=c)),t.lastGeneratedColumn===1/0&&a&&t.generatedLine===a.generatedOffset.generatedLine&&(t.lastGeneratedColumn=a.generatedOffset.generatedColumn-2),t.generatedLine+=s,e.call(this,t)}),t,r)})}computeColumnSpans(){for(let e=0;e<this._sections.length;e++)this._sections[e].consumer.computeColumnSpans()}destroy(){for(